import{_ as a,c as e,a7 as t,o as n}from"./chunks/framework.DKOW1EBX.js";const k=JSON.parse('{"title":"工程化","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontend/工程化.md","filePath":"docs/frontend/工程化.md","lastUpdated":1736905510000}'),o={name:"docs/frontend/工程化.md"};function i(r,s,h,c,l,p){return n(),e("div",null,s[0]||(s[0]=[t(`<h1 id="工程化" tabindex="-1">工程化 <a class="header-anchor" href="#工程化" aria-label="Permalink to &quot;工程化&quot;">​</a></h1><h3 id="json-schema" tabindex="-1"><a href="https://www.schemastore.org/json" target="_blank" rel="noreferrer">JSON Schema</a> <a class="header-anchor" href="#json-schema" aria-label="Permalink to &quot;[JSON Schema](https://www.schemastore.org/json)&quot;">​</a></h3><blockquote><p>JSON schema 是一套对 JSON 进行规范化的方案，在 JSON 文件中声明 schema 即可使用 JSON schema 检查 JSON 文件的正确性，且大部分主流 IDE 可对 JSON 文件进行属性提示、字段校验。</p></blockquote><p><code>example: tsconfig.json</code></p><div class="language-JSON vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://json.schemastore.org/tsconfig&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,5)]))}const m=a(o,[["render",i]]);export{k as __pageData,m as default};
