import{_ as e,c as o,a7 as t,o as r}from"./chunks/framework.DKOW1EBX.js";const u=JSON.parse('{"title":"基础","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontend/样式/基础/css.md","filePath":"docs/frontend/样式/基础/css.md","lastUpdated":1736567647000}'),l={name:"docs/frontend/样式/基础/css.md"};function c(s,a,n,d,i,h){return r(),o("div",null,a[0]||(a[0]=[t('<h1 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h1><h2 id="水平居中的方法" tabindex="-1">水平居中的方法 <a class="header-anchor" href="#水平居中的方法" aria-label="Permalink to &quot;水平居中的方法&quot;">​</a></h2><blockquote><p><a href="/blog/js-playground.html#horizontal-center" target="_blank">示例</a></p></blockquote><h2 id="垂直居中的方法" tabindex="-1">垂直居中的方法 <a class="header-anchor" href="#垂直居中的方法" aria-label="Permalink to &quot;垂直居中的方法&quot;">​</a></h2><blockquote><p><a href="/blog/js-playground.html#vertical-center" target="_blank">示例</a></p></blockquote><blockquote><p>注意 <code>display: table-cell</code> 的使用；</p></blockquote><h2 id="如何使用css实现硬件加速" tabindex="-1">如何使用css实现硬件加速？ <a class="header-anchor" href="#如何使用css实现硬件加速" aria-label="Permalink to &quot;如何使用css实现硬件加速？&quot;">​</a></h2><blockquote><p>硬件加速是指通过创建独⽴的复合图层，让GPU来渲染这个图层，从⽽提⾼性能</p></blockquote><ul><li>⼀般触发硬件加速的属性 CSS 有 <code>transform</code>, <code>opacity</code>, <code>filter</code>,为了避免2D动画在开始和结束的时候的操作，⼀般使repaint⽤<code>tranform:translateZ(0)</code></li></ul><h2 id="重绘和重排的理解" tabindex="-1">重绘和重排的理解 <a class="header-anchor" href="#重绘和重排的理解" aria-label="Permalink to &quot;重绘和重排的理解&quot;">​</a></h2><h2 id="实现小于12px的字体效果" tabindex="-1">实现小于12px的字体效果 <a class="header-anchor" href="#实现小于12px的字体效果" aria-label="Permalink to &quot;实现小于12px的字体效果&quot;">​</a></h2><blockquote><p>transform: scale(size); 只可以缩放可以定义宽高的元素，而行内元素没有宽高的，可以使用 display: inline-block;</p></blockquote><p>transform: scale(0.6);</p>',13)]))}const b=e(l,[["render",c]]);export{u as __pageData,b as default};
