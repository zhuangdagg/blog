import{_ as i,o as a,c as e,a7 as t}from"./chunks/framework.DKOW1EBX.js";const r=JSON.parse('{"title":"存在不足问题","description":"","frontmatter":{},"headers":[],"relativePath":"docs/note/issues.md","filePath":"docs/note/issues.md","lastUpdated":1727359954000}'),l={name:"docs/note/issues.md"};function n(p,s,h,k,d,o){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="存在不足问题" tabindex="-1">存在不足问题 <a class="header-anchor" href="#存在不足问题" aria-label="Permalink to &quot;存在不足问题&quot;">​</a></h1><hr><h3 id="vue" tabindex="-1">vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;vue&quot;">​</a></h3><ul><li>事件绑定和表单输入绑定的修饰符；</li></ul><blockquote><p>事件修饰符：</p></blockquote><ul><li><p><code>.stop</code>: <code>event.stopPropagation()</code></p></li><li><p><code>.prevent</code></p><ul><li><p><code>event.preventDefault();</code> 阻止默认的点击事件执行，但依旧传播</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> btn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">btn.className </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;custom-button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">btn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handleClick);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">evt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (evt.cancelable) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 检查事件是否支持取消，否则preventDefault()将不会生效；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    evt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li><li><p><code>.self</code>： event.target 是元素本身时才会触发事件处理器，事件处理器不来自子元素</p></li><li><p><code>.capture</code></p></li><li><p><code>.once</code></p></li><li><p><code>.passive</code></p></li></ul><blockquote><p>常用按键别名</p></blockquote><ul><li><code>.enter</code></li><li><code>.tab</code></li><li><code>.delete</code> (p)</li><li><code>.esc</code></li></ul>`,8)]))}const E=i(l,[["render",n]]);export{r as __pageData,E as default};
